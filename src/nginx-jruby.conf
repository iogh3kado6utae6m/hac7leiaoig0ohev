# Nginx virtual host configuration for JRuby + Passenger
# Based on official Passenger Docker patterns

server {
    listen 80 default_server;
    server_name _;
    root /home/app/webapp/public;
    
    # Passenger configuration
    passenger_enabled on;
    passenger_ruby /usr/bin/jruby;
    passenger_app_env production;
    passenger_app_root /home/app/webapp;
    passenger_app_group_name monitus_jruby;
    passenger_user app;
    passenger_group app;
    
    # JRuby-specific Passenger settings
    passenger_concurrency_model thread;
    passenger_thread_count 16;
    passenger_min_instances 2;
    passenger_max_instances 8;
    
    # Performance optimizations
    passenger_max_request_queue_size 100;
    passenger_queue_timeout 90;
    passenger_pool_idle_time 300;
    passenger_max_requests 1000;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/atom+xml;
    
    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Prometheus metrics endpoints
    location /monitus {
        # Allow CORS for Prometheus scraping
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Deny access to sensitive files
    location ~ /\.(ht|git|svn) {
        deny all;
    }
    
    location ~ /(Gemfile|Rakefile|config\.ru)$ {
        deny all;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Logging
    access_log /var/log/nginx/webapp_access.log;
    error_log /var/log/nginx/webapp_error.log;
}
